generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model products {
  id          Int        @id
  name        String
  description String
  tenant_id   String     @db.Uuid
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  tenants     tenants    @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  variants    variants[]

  @@index([tenant_id, created_at], map: "idx_products_tenant_created_at")
}

model variants {
  id         Int      @id @default(autoincrement())
  product_id Int
  type       String
  price      Decimal  @db.Decimal(10, 2)
  stock      Int      @default(100)
  image_url  String
  products   products @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tenants {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String     @unique
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  products   products[]
  users      users[]
}

model users {
  id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username  String
  password  String
  role      String  @default("user")
  tenant_id String  @db.Uuid
  tenants   tenants @relation(fields: [tenant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([id, tenant_id], map: "id_tenant_unique")
  @@unique([username, tenant_id], map: "username_tenant_unique")
  @@index([tenant_id], map: "idx_users_tenant_created_at")
}
